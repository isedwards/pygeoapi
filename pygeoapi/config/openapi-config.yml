components:
  parameters:
    bbox-crs:
      description: Indicates the EPSG for the given bbox coordinates.
      explode: false
      in: query
      name: bbox-crs
      required: false
      schema:
        default: 4326
        type: integer
      style: form
    f:
      description: The optional f parameter indicates the output format which the
        server shall provide as part of the response document.  The default format
        is GeoJSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: json
        enum:
        - json
        - html
        - jsonld
        type: string
      style: form
    lang:
      description: The optional lang parameter instructs the server return a response
        in a certain language, if supported.  If the language is not among the available
        values, the Accept-Language header language will be used if it is supported.
        If the header is missing, the default server language is used. Note that providers
        may only support a single language (or often no language at all), that can
        be different from the server language.  Language strings can be written in
        a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de")
        or locale-like (e.g. "de-CH" or "fr_BE") fashion.
      in: query
      name: lang
      required: false
      schema:
        default: en-US
        enum:
        - en-US
        type: string
    offset:
      description: The optional offset parameter indicates the index within the result
        set from which the server shall begin presenting results in the response document.  The
        first element has an index of 0 (default).
      explode: false
      in: query
      name: offset
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    properties:
      description: The properties that should be included for each feature. The parameter
        value is a comma-separated list of property names.
      explode: false
      in: query
      name: properties
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    skipGeometry:
      description: This option can be used to skip response geometries for each feature.
      explode: false
      in: query
      name: skipGeometry
      required: false
      schema:
        default: false
        type: boolean
      style: form
    vendorSpecificParameters:
      description: Additional "free-form" parameters that are not explicitly defined
      in: query
      name: vendorSpecificParameters
      schema:
        additionalProperties: true
        type: object
      style: form
  responses:
    '200':
      description: successful operation
    Queryables:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryables'
      description: successful queryables operation
    default:
      content:
        application/json:
          schema:
            $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml
      description: Unexpected error
  schemas:
    queryable:
      properties:
        description:
          description: a human-readable narrative describing the queryable
          type: string
        language:
          default:
          - en
          description: the language used for the title and description
          type: string
        queryable:
          description: the token that may be used in a CQL predicate
          type: string
        title:
          description: a human readable title for the queryable
          type: string
        type:
          description: the data type of the queryable
          type: string
        type-ref:
          description: a reference to the formal definition of the type
          format: url
          type: string
      required:
      - queryable
      - type
      type: object
    queryables:
      properties:
        queryables:
          items:
            $ref: '#/components/schemas/queryable'
          type: array
      required:
      - queryables
      type: object
info:
  contact:
    email: you@example.org
    name: Organization Name
    url: https://wmo.int
  description: PygeoAPI instance to support the encoding of daily climate data
  license:
    name: Unified WMO Data Policy
    url: https://public.wmo.int/en/our-mandate/what-we-do/observations/Unified-WMO-Data-Policy-Resolution
  termsOfService: https://public.wmo.int/en/our-mandate/what-we-do/observations/Unified-WMO-Data-Policy-Resolution
  title: DayCLI encoding
  version: 0.15.dev0
  x-keywords:
  - wmo
  - wis 2.0
openapi: 3.0.2
paths:
  /:
    get:
      description: Landing page
      operationId: getLandingPage
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Landing page
      tags:
      - server
  /collections:
    get:
      description: Collections
      operationId: getCollections
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Collections
      tags:
      - server
  /collections/ca_clim:
    get:
      description: Test / example dataset
      operationId: describeCa_climCollection
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Hourly climate data from Ontario (ECCC) metadata
      tags:
      - ca_clim
  /collections/ca_clim/items:
    get:
      description: Test / example dataset
      operationId: getCa_climFeatures
      parameters:
      - &id001
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - json
          - html
          - jsonld
          - csv
          type: string
        style: form
      - &id002
        description: The optional lang parameter instructs the server return a response
          in a certain language, if supported.  If the language is not among the available
          values, the Accept-Language header language will be used if it is supported.
          If the header is missing, the default server language is used. Note that
          providers may only support a single language (or often no language at all),
          that can be different from the server language.  Language strings can be
          written in a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple
          (e.g. "de") or locale-like (e.g. "de-CH" or "fr_BE") fashion.
        in: query
        name: lang
        required: false
        schema:
          default: en-US
          enum:
          - en-US
          type: string
      - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox
      - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
      - description: The properties that should be included for each feature. The
          parameter value is a comma-separated list of property names.
        explode: false
        in: query
        name: properties
        required: false
        schema:
          items:
            enum:
            - id
            - elevation
            - observation_type_id
            - phenomenon_start
            - phenomenon_end
            - result_value
            - result_uom
            - result_description
            - result_quality
            - result_time
            - valid_from
            - valid_to
            - host_id
            - observer_id
            - observed_property_id
            - observing_procedure_id
            - report_id
            - collection_id
            - parameter
            - feature_of_interest_id
            - version
            - change_date
            - user_id
            - status_id
            - comments
            - source_id
            type: string
          type: array
        style: form
      - $ref: '#/components/parameters/vendorSpecificParameters'
      - $ref: '#/components/parameters/skipGeometry'
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
      - $ref: '#/components/parameters/offset'
      - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/datetime
      - explode: false
        in: query
        name: id
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: elevation
        required: false
        schema:
          type: NUMERIC
        style: form
      - explode: false
        in: query
        name: observation_type_id
        required: false
        schema:
          type: INTEGER
        style: form
      - explode: false
        in: query
        name: phenomenon_start
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: phenomenon_end
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: result_value
        required: false
        schema:
          type: NUMERIC
        style: form
      - explode: false
        in: query
        name: result_uom
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: result_description
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: result_quality
        required: false
        schema:
          type: JSONB
        style: form
      - explode: false
        in: query
        name: result_time
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: valid_from
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: valid_to
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: host_id
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: observer_id
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: observed_property_id
        required: false
        schema:
          type: INTEGER
        style: form
      - explode: false
        in: query
        name: observing_procedure_id
        required: false
        schema:
          type: INTEGER
        style: form
      - explode: false
        in: query
        name: report_id
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: collection_id
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: parameter
        required: false
        schema:
          type: JSONB
        style: form
      - explode: false
        in: query
        name: feature_of_interest_id
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: version
        required: false
        schema:
          type: INTEGER
        style: form
      - explode: false
        in: query
        name: change_date
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: user_id
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: status_id
        required: false
        schema:
          type: INTEGER
        style: form
      - explode: false
        in: query
        name: comments
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: source_id
        required: false
        schema:
          type: VARCHAR
        style: form
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Hourly climate data from Ontario (ECCC) items
      tags:
      - ca_clim
  /collections/ca_clim/items/{featureId}:
    get:
      description: Test / example dataset
      operationId: getCa_climFeature
      parameters:
      - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Hourly climate data from Ontario (ECCC) item by id
      tags:
      - ca_clim
  /collections/ca_clim/queryables:
    get:
      description: Test / example dataset
      operationId: getCa_climQueryables
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Hourly climate data from Ontario (ECCC) queryables
      tags:
      - ca_clim
  /collections/ca_stations:
    get:
      description: Stations
      operationId: describeCa_stationsCollection
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Stations (Canada) metadata
      tags:
      - ca_stations
  /collections/ca_stations/items:
    get:
      description: Stations
      operationId: getCa_stationsFeatures
      parameters:
      - *id001
      - *id002
      - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox
      - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
      - description: The properties that should be included for each feature. The
          parameter value is a comma-separated list of property names.
        explode: false
        in: query
        name: properties
        required: false
        schema:
          items:
            enum:
            - id
            - name
            - description
            - links
            - elevation
            - wigos_station_identifier
            - facility_type
            - date_established
            - date_closed
            - wmo_region
            - territory
            - valid_from
            - valid_to
            - version
            - change_date
            - user_id
            - status_id
            - comments
            - time_zone_id
            type: string
          type: array
        style: form
      - $ref: '#/components/parameters/vendorSpecificParameters'
      - $ref: '#/components/parameters/skipGeometry'
      - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
      - $ref: '#/components/parameters/offset'
      - explode: false
        in: query
        name: id
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: name
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: description
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: links
        required: false
        schema:
          type: JSONB
        style: form
      - explode: false
        in: query
        name: elevation
        required: false
        schema:
          type: NUMERIC
        style: form
      - explode: false
        in: query
        name: wigos_station_identifier
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: facility_type
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: date_established
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: date_closed
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: wmo_region
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: territory
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: valid_from
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: valid_to
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: version
        required: false
        schema:
          type: INTEGER
        style: form
      - explode: false
        in: query
        name: change_date
        required: false
        schema:
          type: TIMESTAMP
        style: form
      - explode: false
        in: query
        name: user_id
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: status_id
        required: false
        schema:
          type: INTEGER
        style: form
      - explode: false
        in: query
        name: comments
        required: false
        schema:
          type: VARCHAR
        style: form
      - explode: false
        in: query
        name: time_zone_id
        required: false
        schema:
          type: INTEGER
        style: form
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Stations (Canada) items
      tags:
      - ca_stations
  /collections/ca_stations/items/{featureId}:
    get:
      description: Stations
      operationId: getCa_stationsFeature
      parameters:
      - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Stations (Canada) item by id
      tags:
      - ca_stations
  /collections/ca_stations/queryables:
    get:
      description: Stations
      operationId: getCa_stationsQueryables
      parameters:
      - *id001
      - *id002
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Stations (Canada) queryables
      tags:
      - ca_stations
  /conformance:
    get:
      description: API conformance definition
      operationId: getConformanceDeclaration
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: API conformance definition
      tags:
      - server
  /jobs:
    get:
      description: Retrieve a list of jobs
      operationId: getJobs
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve jobs list
      tags:
      - server
  /jobs/{jobId}:
    delete:
      description: Cancel / delete job
      operationId: deleteJob
      parameters:
      - &id003
        description: job identifier
        in: path
        name: jobId
        required: true
        schema:
          type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Cancel / delete job
      tags:
      - server
    get:
      description: Retrieve job details
      operationId: getJob
      parameters:
      - *id003
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job details
      tags:
      - server
  /jobs/{jobId}/results:
    get:
      description: Retrive job resiults
      operationId: getJobResults
      parameters:
      - *id003
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job results
      tags:
      - server
  /openapi:
    get:
      description: This document
      operationId: getOpenapi
      parameters:
      - $ref: '#/components/parameters/f'
      - $ref: '#/components/parameters/lang'
      - description: UI to render the OpenAPI document
        explode: false
        in: query
        name: ui
        required: false
        schema:
          default: swagger
          enum:
          - swagger
          - redoc
          type: string
        style: form
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        default:
          $ref: '#/components/responses/default'
      summary: This document
      tags:
      - server
  /processes:
    get:
      description: Processes
      operationId: getProcesses
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ProcessList.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Processes
      tags:
      - server
  /processes/cdm:
    get:
      description: Process to ingest CDM formatted observations
      operationId: describeCdmProcess
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Get process metadata
      tags:
      - cdm
  /processes/cdm/execution:
    post:
      description: Process to ingest CDM formatted observations
      operationId: executeCdmJob
      requestBody:
        content:
          application/json:
            example:
              inputs:
                value: 5
              outputs:
                result: 10
            schema:
              $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/execute.yaml
        description: Mandatory execute request JSON
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ExecuteAsync.yaml
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        '500':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ServerError.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Process import_observations execution
      tags:
      - cdm
  /processes/daycli-encoder:
    get:
      description: Process to convert DAYCLI data to BUFR
      operationId: describeDaycli-encoderProcess
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Get process metadata
      tags:
      - daycli-encoder
  /processes/daycli-encoder/execution:
    post:
      description: Process to convert DAYCLI data to BUFR
      operationId: executeDaycli-encoderJob
      requestBody:
        content:
          application/json:
            example:
              inputs: {}
              output:
                messages: []
            schema:
              $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/execute.yaml
        description: Mandatory execute request JSON
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ExecuteAsync.yaml
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        '500':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ServerError.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Process daycli-encoder execution
      tags:
      - daycli-encoder
servers:
- description: PygeoAPI instance to support the encoding of daily climate data
  url: http://localhost:5000
tags:
- description: PygeoAPI instance to support the encoding of daily climate data
  externalDocs:
    description: information
    url: https://community.wmo.int/activity-areas/wis/wis2-implementation
  name: server
- description: SpatioTemporal Asset Catalog
  name: stac
- description: Test / example dataset
  name: ca_clim
- description: Stations
  name: ca_stations
- description: Process to convert DAYCLI data to BUFR
  name: daycli-encoder
- description: Process to ingest CDM formatted observations
  name: cdm

